name: llvm
version: 20.1.1
release: 1
url: https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.1/llvm-project-20.1.1.src.tar.xz
homepage: https://llvm.org/

license: Apache-2.0 WITH LLVM-exception
summary: Low-level virtual machine compiler infrastructure
description: |
  LLVM is a collection of modular and reusable compiler and toolchain technologies. It is widely used to build compilers, static analyzers, and other language infrastructure, and serves as the backend for Clang, Rust, Zig, and others.

phase: 5
builddeps: [cmake, ninja, gcc, glibc, python, makeca_certs, curl, git, doxygen, libxml2, python-psutils, pyyaml]

buildsteps: |
  #many scripts that use python. -- This patches them to just invoke python3
  #grep -rl '#!.*python' | xargs sed -i '1s/python$/python3/'

  cd llvm

  # Ensure the FileCheck Program is being built
  sed 's/utility/tool/' -i utils/FileCheck/CMakeLists.txt

  mkdir -v build && cd build

  cmake -D CMAKE_INSTALL_PREFIX=/usr           \
        -D CMAKE_SKIP_INSTALL_RPATH=ON         \
        -D LLVM_ENABLE_FFI=ON                  \
        -D CMAKE_BUILD_TYPE=Release            \
        -D LLVM_BUILD_LLVM_DYLIB=ON            \
        -D LLVM_LINK_LLVM_DYLIB=ON             \
        -D LLVM_ENABLE_LIBCXX=ON               \
        -D LLVM_ENABLE_RTTI=ON                 \
        -D LLVM_TARGETS_TO_BUILD=all           \
        -D LLVM_BINUTILS_INCDIR=/usr/include   \
        -D LLVM_INCLUDE_BENCHMARKS=OFF         \
        -D CLANG_DEFAULT_PIE_ON_LINUX=ON       \
        -D CLANG_CONFIG_FILE_SYSTEM_DIR=/etc/clang \
        -D CMAKE_CXX_FLAGS="-std=c++11" \
        -DLLVM_ENABLE_PROJECTS="clang;lld" \
        -DLLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi;libunwind;openmp" \
        -W no-dev -G Ninja ..              
  ninja
  ninja install

  mkdir -pv /etc/clang

  cat > /etc/clang/clang.cfg << "EOF"
  -B/usr/lib/gcc/x86_64-linux-musl/14.2.0
  -L/usr/lib/gcc/x86_64-linux-musl/14.2.0
  EOF

  cat > /etc/clang/clang++.cfg << "EOF"
  -B/usr/lib/gcc/x86_64-linux-musl/14.2.0
  -L/usr/lib/gcc/x86_64-linux-musl/14.2.0
  EOF


  # If this doesn't work clang is broken
  echo 'int main(){}' > dummy.c
  clang dummy.c
  readelf -l a.out | grep ': /lib' 
  rm -v dummy.c a.out